---
name: Test & Release

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: Python ${{ matrix.python-version }} tests
    runs-on: ${{ matrix.os}}
    strategy:
      matrix:
        # FIXME: Ubuntu
        #        os: [ ubuntu-latest, macos-latest ]
        os: [ macos-latest ]
        python: [ "3.10", "3.11", "3.12.0-rc.2" ]

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@main
        with:
          python-version: ${{ matrix.python }}

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          make brew
          make requirements
      - name: pytest
        run: PYTHONHASHSEED=123345 make tests

  #  mypy:
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: Set up Python 3.8
  #        uses: actions/setup-python@v4
  #        with:
  #          python-version: 3.8
  #      - name: Install mypy & stubs packages
  #        run: python -m pip install .[mypy]
  #      - name: mypy
  #        run: python -m mypy --ignore-missing-imports semantic_release

  #  beautify:
  #    name: Beautify
  #    runs-on: ubuntu-latest
  #    concurrency: push
  #    needs: [ test, mypy ]
  #    outputs:
  #      new_sha: ${{ steps.sha.outputs.SHA }}
  #    permissions:
  #      id-token: write
  #      contents: write
  #
  #    steps:
  #      - name: Set up Python 3.9
  #        uses: actions/setup-python@v4
  #        with:
  #          python-version: 3.9
  #
  #      - name: Checkout repository
  #        uses: actions/checkout@v3
  #
  #      - name: Install Black
  #        run: python -m pip install black
  #
  #      - name: Beautify with Black
  #        run: python -m black .
  #
  #      - name: Install isort
  #        run: python -m pip install "isort >=5,<6"
  #        # https://pycqa.github.io/isort/docs/upgrade_guides/5.0.0.html
  #        # removed deprecated "-rc" and "-y" arguments
  #      - name: Sort imports
  #        run: python -m isort .
  #
  #      - name: Commit and push changes
  #        uses: github-actions-x/commit@v2.9
  #        with:
  #          github-token: ${{ secrets.GITHUB_TOKEN }}
  #          commit-message: "style: beautify ${{ github.sha }}"
  #          name: github-actions
  #          email: action@github.com
  #
  #      - name: Get new SHA
  #        id: sha
  #        run: |
  #          new_sha=$(git rev-parse HEAD)
  #          echo "SHA=$new_sha" >> $GITHUB_OUTPUT

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency: push
    needs: [ tests ]
    environment:
      name: pypi
      url: https://pypi.org/p/huti
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package distributions to PyPI
        id: pypi-publish
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verify-metadata: true
          verbose: true

      - name: Publish package distributions to GitHub Releases
        id: github-release
        if: steps.release.outputs.released == 'true'
        uses: python-semantic-release/upload-to-gh-release@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
