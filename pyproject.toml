[project]
name = "huti"
description = "Python helpers and utilities"
dynamic = ["version"]
license = { text = "MIT" }
requires-python = ">=3.10"
dependencies = [
    "beautifulsoup4 >= 4.12.2, <5",
    "furl >= 2.1.3, <3",
    "ghapi >= 1.0.4, <2",
    "gitpython >= 3.1.36, <4",
    "jsonpickle >= 3.0.2, <4",
    "requests >= 2.31.0, <3",
    "rich >= 13.5, <14",
    "semver >=3.0.1, <4",
    "strip-ansi >=0.1.1, <1",
    "structlog >=23.1.0, <24",
    "toml >=0.10.2, <1",
    "typer[all] >= 0.9, <1"
]
[project.optional-dependencies]
dev = [
    "black",
    "icecream",
    "ipython",
    "ipython-suggestions",
    "restmagic",
    "mypy",
    "pip-tools",
    "pyflyby",
    "python-semantic-release",
    "twine",
    "vendorize"
]
docs = [
    "docutils",
    "sphinx",
    "sphinx-click",
    "sphinx-rtd-theme",
    "sphinxcontrib-napoleon"
]
tests = [
    "coverage[toml] >=6, <7",
    "darglint >=1.8.1, <2",
    "environs >=9.5.0, <10",
    "pydocstyle >=6.3, <7",
    "pytest >=7, <8",
    "pytest-asyncio >=0.21.1, <1",
    "pytest-cov >=4, <5",
    "pytest-doctestplus >=0.13, <1",
    "pytest-mock >=3, <4",
    "pytest-xdist >=2, <3",
    "pytest-remotedata >=0.4.0, <1",
    "pytest-lazy-fixture ~=0.6.3",
    "pytest-sugar >=0.9.7, <1",
    "responses==0.21.0",
    "requests-mock >=1.10.0, <2",
    "ruff >=0.0.282, <0.1",
    "tox >=4.6.4, <5",
    "types-pytest-lazy-fixture >=0.6.3.3",
]
[tool.setuptools.package-data]
"huti.data" = ["**/*.pdf", "Brewfile"]
"huti" = ["*.pth"]

[tool.setuptools.packages.find]
where = ["src"]  # ["."] by default

[build-system]
requires = ['setuptools', 'wheel']
build-backend = 'setuptools.build_meta'

[tool.semantic_release]
build_command = "python3 -m build --wheel"
tag_format = "{version}"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.coverage.report]
skip_empty = true
[tool.coverage.html]
directory = "coverage_html_report"
[tool.coverage.run]
branch = true
source = ["src"]
